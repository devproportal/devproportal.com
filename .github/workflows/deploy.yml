name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  HUGO_VERSION: "0.149.0"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: ${{ env.HUGO_VERSION }}
          extended: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            echo "üì¶ Found package-lock.json, running npm ci..."
            npm ci
          elif [ -f package.json ]; then
            echo "üì¶ Found package.json, running npm install..."
            npm install
          else
            echo "üì¶ No package.json found, skipping npm install"
            echo "‚ÑπÔ∏è  This is normal for Hugo sites that don't use npm dependencies"
          fi

      - name: Build Hugo site
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

      - name: Upload Cloudflare artifact
        uses: actions/upload-artifact@v4
        with:
          name: cloudflare-site
          path: public/
          retention-days: 1

  deploy-github-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy-cloudflare-pages:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Cloudflare artifact
        uses: actions/download-artifact@v4
        with:
          name: cloudflare-site
          path: public/

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: devproportal-com
          directory: public/
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}